# .github/workflows/release.yml
# Working GitHub Actions workflow with proper asset inclusion

name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pywebview
    
    - name: Verify folders exist
      run: |
        dir
        if exist templates (echo "‚úÖ templates folder found") else (echo "‚ùå templates folder NOT found")
        if exist static (echo "‚úÖ static folder found") else (echo "‚ùå static folder NOT found")
        if exist gui_app.py (echo "‚úÖ gui_app.py found") else (echo "‚ùå gui_app.py NOT found")
    
    - name: Build Windows executable
      run: |
        pyinstaller --noconfirm --onefile --windowed ^
          --name "MarkdownTableExporter-Windows" ^
          --add-data "templates;templates" ^
          --add-data "static;static" ^
          gui_app.py
    
    - name: Verify build output
      run: |
        dir dist
        if exist "dist\MarkdownTableExporter-Windows.exe" (echo "‚úÖ Windows executable created") else (echo "‚ùå Windows executable NOT created")
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/MarkdownTableExporter-Windows.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pywebview
    
    - name: Verify folders exist
      run: |
        ls -la
        [ -d "templates" ] && echo "‚úÖ templates folder found" || echo "‚ùå templates folder NOT found"
        [ -d "static" ] && echo "‚úÖ static folder found" || echo "‚ùå static folder NOT found"
        [ -f "gui_app.py" ] && echo "‚úÖ gui_app.py found" || echo "‚ùå gui_app.py NOT found"
    
    - name: Build macOS application
      run: |
        pyinstaller --noconfirm --onefile --windowed \
          --name "MarkdownTableExporter-macOS" \
          --add-data "templates:templates" \
          --add-data "static:static" \
          gui_app.py
    
    - name: Verify build output
      run: |
        ls -la dist/
        [ -f "dist/MarkdownTableExporter-macOS" ] && echo "‚úÖ macOS executable created" || echo "‚ùå macOS executable NOT created"
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: dist/MarkdownTableExporter-macOS

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
        # Skip webkit packages that cause issues
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pywebview
    
    - name: Verify folders exist
      run: |
        ls -la
        [ -d "templates" ] && echo "‚úÖ templates folder found" || echo "‚ùå templates folder NOT found"
        [ -d "static" ] && echo "‚úÖ static folder found" || echo "‚ùå static folder NOT found"
        [ -f "gui_app.py" ] && echo "‚úÖ gui_app.py found" || echo "‚ùå gui_app.py NOT found"
    
    - name: Build Linux executable
      run: |
        pyinstaller --noconfirm --onefile \
          --name "MarkdownTableExporter-Linux" \
          --add-data "templates:templates" \
          --add-data "static:static" \
          gui_app.py
    
    - name: Verify build output
      run: |
        ls -la dist/
        [ -f "dist/MarkdownTableExporter-Linux" ] && echo "‚úÖ Linux executable created" || echo "‚ùå Linux executable NOT created"
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: dist/MarkdownTableExporter-Linux

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Verify downloaded artifacts
      run: |
        echo "üìÅ Downloaded artifacts:"
        find . -name "MarkdownTableExporter-*" -type f
        ls -la windows-build/ || echo "‚ùå No windows-build folder"
        ls -la macos-build/ || echo "‚ùå No macos-build folder"  
        ls -la linux-build/ || echo "‚ùå No linux-build folder"
    
    - name: Get tag name
      id: tag_name
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
        name: Markdown Table Exporter ${{ steps.tag_name.outputs.TAG_NAME }}
        body: |
          ## üöÄ Markdown Table Exporter ${{ steps.tag_name.outputs.TAG_NAME }}
          
          Transform your Markdown tables into beautiful, interactive HTML documents with professional styling and advanced animations!
          
          ### üì¶ Downloads
          
          Choose the right version for your operating system:
          
          | Platform | Download | System Requirements |
          |----------|----------|-------------------|
          | ü™ü **Windows** | `MarkdownTableExporter-Windows.exe` | Windows 10+ |
          | üçé **macOS** | `MarkdownTableExporter-macOS` | macOS 10.14+ |
          | üêß **Linux** | `MarkdownTableExporter-Linux` | Ubuntu 18.04+ |
          
          ### ‚ú® Features
          - **Modern Material 3 Design** with fluid spring-based animations
          - **Drag & drop file loading** with visual feedback
          - **Light/dark theme support** with smooth transitions
          - **Multiple export options**: CSV, PDF, and HTML
          - **Command palette** (Ctrl+K) for power users
          - **Real-time table validation** and error handling
          - **Advanced animation system** with contextual reactions
          
          ### üéõÔ∏è Usage
          1. **Download** the appropriate file for your operating system
          2. **Run** the executable (no Python installation required)
          3. **Load** your Markdown file via drag & drop or file browser
          4. **Convert** to beautiful HTML with one click
          5. **Export** in additional formats as needed
          
          ### ‚å®Ô∏è Keyboard Shortcuts
          - `Ctrl+K` - Open command palette
          - `Ctrl+O` - Open file dialog
          - `Ctrl+T` - Toggle theme
          - `Ctrl+Enter` - Start conversion
          - `F1` - Show help dialog
          - `Esc` - Close dialogs/palette
          
          ### üîß System Requirements
          - **Windows**: Windows 10 or later (64-bit)
          - **macOS**: macOS 10.14 (Mojave) or later
          - **Linux**: Ubuntu 18.04 or equivalent distribution
          - **Memory**: 256MB RAM minimum
          - **Storage**: 100MB available space
          
          ### üìñ Documentation
          For detailed instructions and examples, see the [README](https://github.com/Econ01/markdown-table-exporter/blob/main/README.md).
          
          ### üêõ Known Issues
          - First launch may be slower as the application initializes
          - On macOS, you may need to right-click and select "Open" the first time
          - On Linux, make the file executable with `chmod +x` after download
          
          ---
          
          **Built with**: Python, PyWebView, Material 3 Design, Spring Physics System
        draft: false
        prerelease: false
        files: |
          windows-build/MarkdownTableExporter-Windows.exe
          macos-build/MarkdownTableExporter-macOS
          linux-build/MarkdownTableExporter-Linux
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}